{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhi\\\\OneDrive\\\\Desktop\\\\React Project\\\\adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport React, { Fragment } from \"react\";\nimport RootPage from \"./components/RootPage\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Homepage from \"./components/pages/Homepage\";\nimport EventsPage from \"./components/pages/EventsPage\";\nimport NewEventPage from \"./components/pages/NewEventPage\";\nimport EventDetailPage from \"./components/pages/EventDetailPage\";\nimport EditEventPage from \"./components/pages/EditEventPage\";\nimport EventsNavigation from \"./components/EventsNavigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this),\n    children: [{\n      path: \"ind\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventID\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventID/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","RootPage","RouterProvider","createBrowserRouter","Homepage","EventsPage","NewEventPage","EventDetailPage","EditEventPage","EventsNavigation","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["C:/Users/nikhi/OneDrive/Desktop/React Project/adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport React, { Fragment } from \"react\";\nimport RootPage from \"./components/RootPage\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Homepage from \"./components/pages/Homepage\";\nimport EventsPage from \"./components/pages/EventsPage\";\nimport NewEventPage from \"./components/pages/NewEventPage\";\nimport EventDetailPage from \"./components/pages/EventDetailPage\";\nimport EditEventPage from \"./components/pages/EditEventPage\";\nimport EventsNavigation from \"./components/EventsNavigation\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootPage />,\n    children: [\n      { path: \"\", element: <Homepage /> },\n      {\n        path: \"events\",\n        element: <EventsNavigation />,\n        children: [\n          { path: \"ind\", element: <EventsPage /> },\n          { path: \":eventID\", element: <EventDetailPage /> },\n          { path: \"new\", element: <NewEventPage /> },\n          { path: \":eventID/edit\", element: <EditEventPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return (\n    <Fragment>\n      <RouterProvider router={router} />\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;EACEU,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACV,QAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACrBC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,EAAE;IAAEC,OAAO,eAAEH,OAAA,CAACP,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACnC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACF,gBAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BC,QAAQ,EAAE,CACR;MAAEN,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACN,UAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACxC;MAAEL,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACJ,eAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAClD;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACL,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC1C;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACH,aAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEzD,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASE,GAAGA,CAAA,EAAG;EACb,oBACET,OAAA,CAACX,QAAQ;IAAAmB,QAAA,eACPR,OAAA,CAACT,cAAc;MAACU,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEf;AAACG,EAAA,GANQD,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}